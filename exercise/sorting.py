#1. Відсортувати тварин за віком
animals = [
    {'type': 'penguin', 'name': 'Stephanie', 'age': 8},
    {'type': 'elephant', 'name': 'Devon', 'age': 3},
    {'type': 'puma', 'name': 'Moe', 'age': 5},
]

#2. З використанням list comprehension cтворити список квадратів непарних елементів вхідного списку numbers
numbers = [4, 2, 1, 6, 9, 7]

#3. Реалізувати функцію послідовного пошуку, який шукає потрібний елемент, починаючи з кінця вхідного списку
names = ['Joe', 'Mary', 'Ann', 'Andrew', 'Stephan', 'Rosie']
element_to_find = 'Stephan'

'''
4. Реалізувати клас Container, який відповідає наступним умовам:
   - кожен об'єкт цього класу має атрибут elements, який при створенні нового об'єкту класу є пустим списком
   - об'єкт має метод add(), який додає новий елемент до списку
   - тип елементів, що можуть зберігатися у контейнері, визначається за першим доданим елементом: якщо першим 
   було додано int, всі наступні мають бути int. Якщо першим було додано str, всі наступні також str. 
   Модливі типи даних - примітивні типи мови Python (без колекцій та мапінгів)
   Якщо ця умова не виконується - метод add повертає помилку TypeError
   - elements завжди відсортовано за зростанням
'''  

class Container:

    def __init__(self):
        pass