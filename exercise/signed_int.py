'''
Клас SignedInt є моделлю для опису позитивних і від'ємних цілих чисел. 
Кожен об'єкт класу описує одне ціле число за такою схемою: 
- атрибут modulus містить int, який представляє абсолютне значення (модуль) числа
- атрибут sign містить рядок '-' або '+', який представляє знак числа.
Тож число -3 може бути описане об'єктом SignedInt(3, '-'), 
а число 5 буде описане об'єктом SignedInt(5, '+')

Класс Matrix представляє собою список об'єктів SignedInt. Розмір списку задається 
при створенні об'єкта класу Matrix, об'єкти SignedInt, які входять у цей список,
генеруються автоматично і додаються до атрибуту elements об'єкту Matrix. 


Завдання: 
- реалізувати обмеження на встановлення атрибуту sign. Можливі значення - рядок '-' або '+', інакше - ValueError
- реалізувати обмеження на встановлення атрибуту modulus. Можливі значення - цілі числа, інакше - ValueError
- реалізувати людино-читаємий вивід у звичному форматі представлення чисел зі знаком,
    так щоб str(SignedInt(7, '-')) повертало рядок '-7', а str(SignedInt(4, '+')) повертало рядок '4'
- реалізувати методи потрівняння об'єктів класу SignedInt за звичайною логікою, тобто
    SignedInt(5, '-') < SignedInt(1, '+')
    SignedInt(3, '+') > SignedInt(10, '-')
    SignedInt(2, '+') == SignedInt(2, '+')
    SignedInt(3, '+') <= SignedInt(5, '+')
    SignedInt(7, '-') >= SignedInt(8, '-')
- релізувати протокол ітератора для об'єкту класу Matrix, який дозволить ітерувати його атрибут elements.

Кожен реалізований метод має мати щонайменше один тест. Якщо у методі є розгалуження - 
мають бути протестовані усі гілки. 
'''

class SignedInt:

    def __init__(self, modulus, sign):
        self._modulus = modulus
        self._sign = sign 


class Matrix:

    elements = []

    def __init__(self, size):
        for index in range(size):
            modulus = pow(index, index)
            if index%2:
                sign = '-'
            else:
                sign = '+'
            self.elements.append(SignedInt(modulus, sign))
